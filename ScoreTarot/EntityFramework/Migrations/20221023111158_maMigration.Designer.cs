// <auto-generated />
using System;
using EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EntityFramework.Migrations
{
    [DbContext(typeof(SQLiteContext))]
    [Migration("20221023111158_maMigration")]
    partial class maMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("EntityFramework.Entity.JoueurEntity", b =>
                {
                    b.Property<string>("Pseudo")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("URLIMG")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Pseudo");

                    b.ToTable("Joueur");
                });

            modelBuilder.Entity("EntityFramework.Entity.MancheEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Bonus")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Contrat")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("JoueurAllierPseudo")
                        .HasColumnType("TEXT");

                    b.Property<string>("JoueurQuiPrendPseudo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NbJoueur")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PartieForeignKey")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("JoueurAllierPseudo");

                    b.HasIndex("JoueurQuiPrendPseudo");

                    b.HasIndex("PartieForeignKey");

                    b.ToTable("Manche");
                });

            modelBuilder.Entity("EntityFramework.Entity.PartieEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Partie");
                });

            modelBuilder.Entity("EntityFramework.Entity.PartieJoueur", b =>
                {
                    b.Property<int>("PartieForeignKey")
                        .HasColumnType("INTEGER");

                    b.Property<string>("JoueurForeignKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("JoueurPseudo")
                        .HasColumnType("TEXT");

                    b.Property<int>("PartieId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PartieForeignKey", "JoueurForeignKey");

                    b.HasIndex("JoueurPseudo");

                    b.HasIndex("PartieId");

                    b.ToTable("PartieJoueurs");
                });

            modelBuilder.Entity("JoueurEntityPartieEntity", b =>
                {
                    b.Property<string>("JoueursPseudo")
                        .HasColumnType("TEXT");

                    b.Property<int>("PartiesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("JoueursPseudo", "PartiesId");

                    b.HasIndex("PartiesId");

                    b.ToTable("JoueurEntityPartieEntity");
                });

            modelBuilder.Entity("EntityFramework.Entity.MancheEntity", b =>
                {
                    b.HasOne("EntityFramework.Entity.JoueurEntity", "JoueurAllier")
                        .WithMany()
                        .HasForeignKey("JoueurAllierPseudo");

                    b.HasOne("EntityFramework.Entity.JoueurEntity", "JoueurQuiPrend")
                        .WithMany()
                        .HasForeignKey("JoueurQuiPrendPseudo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityFramework.Entity.PartieEntity", "Partie")
                        .WithMany("Manches")
                        .HasForeignKey("PartieForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JoueurAllier");

                    b.Navigation("JoueurQuiPrend");

                    b.Navigation("Partie");
                });

            modelBuilder.Entity("EntityFramework.Entity.PartieJoueur", b =>
                {
                    b.HasOne("EntityFramework.Entity.JoueurEntity", "Joueur")
                        .WithMany("PartieJoueurs")
                        .HasForeignKey("JoueurPseudo");

                    b.HasOne("EntityFramework.Entity.PartieEntity", "Partie")
                        .WithMany("PartieJoueurs")
                        .HasForeignKey("PartieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Joueur");

                    b.Navigation("Partie");
                });

            modelBuilder.Entity("JoueurEntityPartieEntity", b =>
                {
                    b.HasOne("EntityFramework.Entity.JoueurEntity", null)
                        .WithMany()
                        .HasForeignKey("JoueursPseudo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityFramework.Entity.PartieEntity", null)
                        .WithMany()
                        .HasForeignKey("PartiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EntityFramework.Entity.JoueurEntity", b =>
                {
                    b.Navigation("PartieJoueurs");
                });

            modelBuilder.Entity("EntityFramework.Entity.PartieEntity", b =>
                {
                    b.Navigation("Manches");

                    b.Navigation("PartieJoueurs");
                });
#pragma warning restore 612, 618
        }
    }
}
