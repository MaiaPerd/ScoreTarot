// <auto-generated />
using System;
using EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EntityFramework.Migrations
{
    [DbContext(typeof(SQLiteContext))]
    partial class SQLiteContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("EntityFramework.Entity.JoueurEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<int?>("PartieEntityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Pseudo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("URLIMG")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PartieEntityId");

                    b.ToTable("Joueur");
                });

            modelBuilder.Entity("EntityFramework.Entity.MancheEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Bonus")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Contrat")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("JoueurAllierId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("JoueurQuiPrendId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NbJoueur")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PartieForeignKey")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("JoueurAllierId");

                    b.HasIndex("JoueurQuiPrendId");

                    b.HasIndex("PartieForeignKey");

                    b.ToTable("Manche");
                });

            modelBuilder.Entity("EntityFramework.Entity.PartieEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Partie");
                });

            modelBuilder.Entity("EntityFramework.Entity.JoueurEntity", b =>
                {
                    b.HasOne("EntityFramework.Entity.PartieEntity", null)
                        .WithMany("Joueurs")
                        .HasForeignKey("PartieEntityId");
                });

            modelBuilder.Entity("EntityFramework.Entity.MancheEntity", b =>
                {
                    b.HasOne("EntityFramework.Entity.JoueurEntity", "JoueurAllier")
                        .WithMany()
                        .HasForeignKey("JoueurAllierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityFramework.Entity.JoueurEntity", "JoueurQuiPrend")
                        .WithMany()
                        .HasForeignKey("JoueurQuiPrendId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityFramework.Entity.PartieEntity", "Partie")
                        .WithMany("Manches")
                        .HasForeignKey("PartieForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JoueurAllier");

                    b.Navigation("JoueurQuiPrend");

                    b.Navigation("Partie");
                });

            modelBuilder.Entity("EntityFramework.Entity.PartieEntity", b =>
                {
                    b.Navigation("Joueurs");

                    b.Navigation("Manches");
                });
#pragma warning restore 612, 618
        }
    }
}
